[{"C:\\Users\\User\\Desktop\\Chat App\\client\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Chat App\\client\\src\\App.js":"2","C:\\Users\\User\\Desktop\\Chat App\\client\\src\\components\\SocketClient.js":"3","C:\\Users\\User\\Desktop\\Chat App\\client\\src\\components\\MainPage\\Main.js":"4","C:\\Users\\User\\Desktop\\Chat App\\client\\src\\components\\MainPage\\Google.js":"5","C:\\Users\\User\\Desktop\\Chat App\\client\\src\\components\\MainPage\\Bubble.js":"6","C:\\Users\\User\\Desktop\\Chat App\\client\\src\\components\\Cookie\\Cookie.js":"7"},{"size":199,"mtime":1608734033415,"results":"8","hashOfConfig":"9"},{"size":376,"mtime":1610089398633,"results":"10","hashOfConfig":"9"},{"size":2104,"mtime":1609550767927,"results":"11","hashOfConfig":"9"},{"size":7865,"mtime":1610629362722,"results":"12","hashOfConfig":"9"},{"size":1096,"mtime":1610458847686,"results":"13","hashOfConfig":"9"},{"size":267,"mtime":1610090389833,"results":"14","hashOfConfig":"9"},{"size":992,"mtime":1610627577893,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"c5dfyy",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\Chat App\\client\\src\\index.js",[],["32","33"],"C:\\Users\\User\\Desktop\\Chat App\\client\\src\\App.js",[],"C:\\Users\\User\\Desktop\\Chat App\\client\\src\\components\\SocketClient.js",["34","35","36"],"import { React, useEffect, useRef, useState } from 'react'\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios'\r\n\r\nexport default function SocketClient() {\r\n    const chatValue = useRef();\r\n    const sendChatBtn = useRef();\r\n    const ENDPOINT = 'http://localhost:5000'\r\n    let socket;\r\n    let [message, setMessage] = useState([\"\"])\r\n\r\n    const chatWindow = {\r\n        width: '85%',\r\n        height: '80vh',\r\n        margin: '0 auto',\r\n        background: '#dcdddd'\r\n    }\r\n\r\n    let query = (new URL(document.location)).searchParams;\r\n    let username = query.get(\"user\");\r\n    let occupation = query.get(\"job\");\r\n    let room = query.get(\"room\");\r\n    socket = io(ENDPOINT);\r\n    useEffect(() => {\r\n        socket.on('messageshaha', message => {\r\n            console.log(message);\r\n        })\r\n\r\n        socket.emit('join', { username, occupation, room }, (e) => {\r\n            console.log(\"e\", e)\r\n        })\r\n\r\n        socket.on('userJoin', msg => {\r\n            setMessage([...msg, msg]);\r\n        })\r\n\r\n        return () => {\r\n            socket.emit('disconnect');\r\n            socket.off();\r\n        }\r\n    }, [ENDPOINT, username, occupation, room]);\r\n\r\n    useEffect(() => {\r\n        socket.on('message', msg => {\r\n            console.log(msg);\r\n            setMessage([...msg, msg]);\r\n        })\r\n    }, [message])\r\n\r\n\r\n    // async function Test() {\r\n    //     let response = await axios.post(ENDPOINT + '/testing', {\r\n    //         firstName: 'Fred',\r\n    //         lastName: 'Flintstone'\r\n    //     })\r\n\r\n    //     console.log(\"response data\", response.data);\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     Test()\r\n    // }, []);\r\n\r\n    function sendMessage() {\r\n        const msg = chatValue.current.value;\r\n        let room = query.get(\"room\");\r\n        socket.emit('sendMessage', ({ msg, room }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>CHATTT</h1>\r\n            <p style={chatWindow}>{message}</p>\r\n            <input type=\"text\" ref={chatValue} />\r\n            <button onClick={sendMessage} ref={sendChatBtn}>Enter</button>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\Chat App\\client\\src\\components\\MainPage\\Main.js",["37"],"C:\\Users\\User\\Desktop\\Chat App\\client\\src\\components\\MainPage\\Google.js",[],"C:\\Users\\User\\Desktop\\Chat App\\client\\src\\components\\MainPage\\Bubble.js",[],"C:\\Users\\User\\Desktop\\Chat App\\client\\src\\components\\Cookie\\Cookie.js",["38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":3,"column":8,"nodeType":"45","messageId":"46","endLine":3,"endColumn":13},{"ruleId":"47","severity":1,"message":"48","line":41,"column":8,"nodeType":"49","endLine":41,"endColumn":46,"suggestions":"50"},{"ruleId":"47","severity":1,"message":"48","line":48,"column":8,"nodeType":"49","endLine":48,"endColumn":17,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":163,"column":25,"nodeType":"54","endLine":163,"endColumn":61},{"ruleId":"55","severity":1,"message":"56","line":5,"column":50,"nodeType":"57","messageId":"58","endLine":5,"endColumn":51},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["61"],["62"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"Update the dependencies array to be: [ENDPOINT, username, occupation, room, socket]",{"range":"67","text":"68"},"Update the dependencies array to be: [message, socket]",{"range":"69","text":"70"},[1131,1169],"[ENDPOINT, username, occupation, room, socket]",[1327,1336],"[message, socket]"]